openapi: 3.0.3

info:
  title: CV API
  description: CV API
  version: 1.0.0

servers:
  - url: 'http://localhost:{port}'
    description: "ローカル環境"
    variables:
      port:
        description: "ポート番号"
        enum: ["8080","3000"]
        default: "8080"

tags:
  - name: "users"
    description: "ユーザーに対するCRUD"

security: []

paths:
  "/users":
    post:
      summary: "ユーザー新規登録"
      description: "ユーザーを新規登録する。"
      tags: ["users"]
      deprecated: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAttribute"
      responses:
        "201":
          description: "Created: ユーザーを新規登録済み。"
        "400":
          $ref: "#/components/responses/400-BadRequest"

  "/users/{userId}":
    parameters:
      - $ref: "#/components/parameters/userId"
    delete:
      summary: "指定ユーザー削除"
      description: "指定ユーザーを削除する。"
      tags: ["users"]
      deprecated: false
      responses:
        "204":
          description: "No Content: 指定ユーザーの削除に成功。"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"

  "/users/{userId}/attributes":
    parameters:
      - $ref: "#/components/parameters/userId"
    put:
      summary: "属性更新"
      description: "指定ユーザーの属性を更新する。"
      tags: ["users"]
      deprecated: false
      requestBody:
        description: "属性"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAttribute"
      responses:
        "200":
          $ref: "#/components/responses/200-OK-GotUserAttribute"
        "400":
          $ref: "#/components/responses/400-BadRequest"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"
    get:
      summary: "属性取得"
      description: "指定ユーザーの属性を取得する。"
      tags: ["users"]
      deprecated: false
      responses:
        "200":
          $ref: "#/components/responses/200-OK-GotUserAttribute"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"

  "/users/{userId}/activities":
    parameters:
      - $ref: "#/components/parameters/userId"
    put:
      summary: "アクティビティ群更新"
      description: "指定ユーザーのアクティビティ群を更新する。"
      tags: ["users"]
      deprecated: false
      requestBody:
        description: "アクティビティ群"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserActivities"
      responses:
        "200":
          $ref: "#/components/responses/200-OK-GotUserActivities"
        "400":
          $ref: "#/components/responses/400-BadRequest"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"
    get:
      summary: "アクティビティ群取得"
      description: "指定ユーザーのアクティビティ群を取得する。"
      tags: ["users"]
      deprecated: false
      responses:
        "200":
          $ref: "#/components/responses/200-OK-GotUserActivities"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"

  "/users/{userId}/qualifications":
    parameters:
      - $ref: "#/components/parameters/userId"
    put:
      summary: "資格情報群更新"
      description: "指定ユーザーの資格情報群を更新する。"
      tags: ["users"]
      deprecated: false
      requestBody:
        description: "資格情報群"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserQualifications"
      responses:
        "200":
          $ref: "#/components/responses/200-OK-GotUserQualifications"
        "400":
          $ref: "#/components/responses/400-BadRequest"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"
    get:
      summary: "資格情報群取得"
      description: "指定ユーザーの資格情報群を取得する。"
      tags: ["users"]
      deprecated: false
      responses:
        "200":
          $ref: "#/components/responses/200-OK-GotUserQualifications"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"

  "/users/{userId}/notes":
    parameters:
      - $ref: "#/components/parameters/userId"
    post:
      summary: "注釈新規登録"
      description: "注釈を新規登録する。"
      tags: ["users"]
      deprecated: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserNote"
      responses:
        "201":
          description: "Created: 注釈を新規登録済み。"
        "400":
          $ref: "#/components/responses/400-BadRequest"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"
    get:
      summary: "注釈群取得"
      description: "指定ユーザーの注釈群を取得する。"
      tags: ["users"]
      deprecated: false
      responses:
        "200":
          $ref: "#/components/responses/200-OK-GotUserNotes"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"

  "/users/{userId}/notes/{noteId}":
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/noteId"
    put:
      summary: "注釈更新"
      description: "１注釈を更新する。"
      tags: ["users"]
      deprecated: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserNoteOwn"
      responses:
        "200":
          $ref: "#/components/responses/200-OK-GotUserNoteOwn"
        "400":
          $ref: "#/components/responses/400-BadRequest"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"
    delete:
      summary: "注釈削除"
      description: "１注釈を削除する。"
      tags: ["users"]
      deprecated: false
      responses:
        "204":
          description: "No Content: 指定注釈の削除に成功。"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"

  "/users/{userId}/notes/{noteId}/items":
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/noteId"
    put:
      summary: "注釈内要素群更新"
      description: "１注釈内の要素群を更新する。"
      tags: ["users"]
      deprecated: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserNoteItems"
      responses:
        "200":
          $ref: "#/components/responses/200-OK-GotUserNoteItems"
        "400":
          $ref: "#/components/responses/400-BadRequest"
        "404":
          $ref: "#/components/responses/404-NotFound-NoUser"

components:
  schemas:
    UserId:
      type: string
      description: "ユーザーを一意に識別するID"
      nullable: false
      deprecated: false
      example: "9m4e2mr0ui3e8a215n4g"
      minLength: 20
      maxLength: 20
    UserName:
      type: string
      description: "ユーザーの本名"
      nullable: false
      deprecated: false
      example: "山田太郎"
      minLength: 1
      maxLength: 100
    UserNickName:
      type: string
      description: "ユーザーのニックネーム"
      nullable: true
      deprecated: false
      example: "ドカベン"
      minLength: 0
      maxLength: 100
    Url:
      type: string
      format: uri
      description: "URL"
      nullable: true
      deprecated: false
      example: "https:/example.com/205e460b479e2e2248aec07710c08d50"
      minLength: 0
      maxLength: 4096
    Year:
      type: integer
      format: int32
      description: "生年月日の「年」"
      nullable: false
      deprecated: false
      example: "2022"
      minimum: 1900
      maximum: 9999
    Month:
      type: integer
      format: int32
      description: "生年月日の「月」"
      nullable: false
      deprecated: false
      example: "9"
      minimum: 1
      maximum: 12
    Day:
      type: integer
      format: int32
      description: "生年月日の「日」"
      nullable: false
      deprecated: false
      example: "10"
      minimum: 1
      maximum: 31
    BirthDay:
      type: object
      description: "生年月日"
      nullable: false
      deprecated: false
      example: "{year: 2022, month: 9, day:10}"
      properties:
        year:
          $ref: "#/components/schemas/Year"
        month:
          $ref: "#/components/schemas/Month"
        day:
          $ref: "#/components/schemas/Day"
    Job:
      type: string
      description: "職業"
      nullable: true
      deprecated: false
      example: "エンジニア"
      maxLength: 400
    BelongTo:
      type: string
      description: "所属"
      nullable: true
      deprecated: false
      example: "フリー"
      maxLength: 400
    PR:
      type: string
      description: "PR"
      nullable: true
      deprecated: false
      example: "私は20年以上のキャリアを持ち、〜〜"
      maxLength: 4000
    ActivityName:
      type: string
      description: "アクティビティ名"
      nullable: false
      deprecated: false
      example: "GitHub"
      minLength: 1
      maxLength: 80
    ActivityIcon:
      type: string
      description: "アクティビティアイコン"
      nullable: true
      deprecated: false
      example: "github"
      maxLength: 40
    QualificationName:
      type: string
      description: "資格名"
      nullable: false
      deprecated: false
      example: "Oracle Master"
      minLength: 1
      maxLength: 80
    QualificationOrg:
      type: string
      description: "組織名"
      nullable: true
      deprecated: false
      example: "Oracle"
      maxLength: 80
    QualificationGotDate:
      type: string
      format: date
      description: "取得日"
      nullable: true
      deprecated: false
      example: "2022-09-10"
    QualificationMemo:
      type: string
      description: "メモ"
      nullable: true
      deprecated: false
      example: "期限切れ"
      maxLength: 400
    NoteId:
      type: string
      description: "注釈を一意に識別するID"
      nullable: false
      deprecated: false
      example: "1"
      minLength: 20
      maxLength: 20
    NoteItemText:
      type: string
      description: "注釈内の１要素"
      nullable: false
      deprecated: false
      example: "GraphQLを使っている"
      minLength: 1
      maxLength: 400
    NoteLabel:
      type: string
      description: "ラベル"
      nullable: false
      deprecated: false
      example: "就労条件"
      minLength: 1
      maxLength: 80
    NoteMemo:
      type: string
      description: "メモ"
      nullable: true
      deprecated: false
      example: "以下、順不同。"
      maxLength: 400
    UserAttribute:
      type: object
      description: "１ユーザーの属性"
      properties:
        name:
          $ref: "#/components/schemas/UserName"
        nickname:
          $ref: "#/components/schemas/UserNickName"
        avatarUrl:
          $ref: "#/components/schemas/Url"
        birthday:
          $ref: "#/components/schemas/BirthDay"
        job:
          $ref: "#/components/schemas/Job"
        belongTo:
          $ref: "#/components/schemas/BelongTo"
        pr:
          $ref: "#/components/schemas/PR"
    UserActivity:
      type: object
      description: "１ユーザーのアクティビティ"
      properties:
        name:
          $ref: "#/components/schemas/ActivityName"
        url:
          $ref: "#/components/schemas/Url"
        icon:
          $ref: "#/components/schemas/ActivityIcon"
    UserActivities:
      type: array
      description: "１ユーザーのアクティビティ群"
      items:
        $ref: "#/components/schemas/UserActivity"
    UserQualification:
      type: object
      description: "１ユーザーの資格情報"
      properties:
        name:
          $ref: "#/components/schemas/QualificationName"
        organization:
          $ref: "#/components/schemas/QualificationOrg"
        url:
          $ref: "#/components/schemas/Url"
        gotDate:
          $ref: "#/components/schemas/QualificationGotDate"
        memo:
          $ref: "#/components/schemas/QualificationMemo"
    UserQualifications:
      type: array
      description: "１ユーザーの資格情報群"
      items:
        $ref: "#/components/schemas/UserQualification"
    UserNoteItem:
      type: object
      description: "１ユーザーの注釈内の１要素"
      properties:
        text:
          $ref: "#/components/schemas/NoteItemText"
    UserNoteItems:
      type: array
      description: "１ユーザーの注釈内の要素群"
      items:
        $ref: "#/components/schemas/UserNoteItem"
    UserNoteOwn:
      type: object
      description: "１ユーザーの注釈自身"
      properties:
        label:
          $ref: "#/components/schemas/NoteLabel"
        memo:
          $ref: "#/components/schemas/NoteMemo"
    UserNote:
      type: object
      description: "１ユーザーの注釈"
      properties:
        label:
          $ref: "#/components/schemas/NoteLabel"
        memo:
          $ref: "#/components/schemas/NoteMemo"
        items:
          $ref: "#/components/schemas/UserNoteItems"
    UserNotes:
      type: array
      description: "１ユーザーの注釈群"
      items:
        $ref: "#/components/schemas/UserNote"
    ClientError:
      type: object
      properties:
        code: { type: string }
        type: { type: string }
        message: { type: string }
        errors:
          type: array
          items:
            type: object
            properties:
              field: { type: string }
              code: { type: string }

  parameters:
    userId:
      name: "userId"
      in: "path"
      required: true
      schema:
        $ref: "#/components/schemas/UserId"
    noteId:
      name: "noteId"
      in: "path"
      required: true
      schema:
        $ref: "#/components/schemas/NoteId"

  responses:
    200-OK-GotUserAttribute:
      description: "OK: 指定ユーザーの属性を返却する。"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserAttribute"
    200-OK-GotUserActivities:
      description: "OK: 指定ユーザーのアクティビティ群を返却する。"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserActivities"
    200-OK-GotUserQualifications:
      description: "OK: 指定ユーザーの資格情報群を返却する。"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserQualifications"
    200-OK-GotUserNoteItems:
      description: "OK: 指定ユーザーの１注釈内の要素群を返却する。"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserNoteItems"
    200-OK-GotUserNoteOwn:
      description: "OK: 指定ユーザーの注釈自身を返却する。"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserNoteOwn"
    200-OK-GotUserNote:
      description: "OK: 指定ユーザーの注釈を返却する。"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserNote"
    200-OK-GotUserNotes:
      description: "OK: 指定ユーザーの注釈群を返却する。"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserNotes"
    400-BadRequest:
      description: "Bad Request: 属性に誤りがある。"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClientError"
    404-NotFound-NoUser:
      description: "Not Found: 指定ユーザーが存在しない。"