// Code generated by ent, DO NOT EDIT.

package skill

import (
	"time"
)

const (
	// Label holds the string label denoting the skill type in the database.
	Label = "skill"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldKey holds the string denoting the key field in the database.
	FieldKey = "key"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldTagKey holds the string denoting the tag_key field in the database.
	FieldTagKey = "tag_key"
	// EdgeCareerSkills holds the string denoting the careerskills edge name in mutations.
	EdgeCareerSkills = "careerSkills"
	// Table holds the table name of the skill in the database.
	Table = "skills"
	// CareerSkillsTable is the table that holds the careerSkills relation/edge.
	CareerSkillsTable = "career_skills"
	// CareerSkillsInverseTable is the table name for the CareerSkill entity.
	// It exists in this package in order to avoid circular dependency with the "careerskill" package.
	CareerSkillsInverseTable = "career_skills"
	// CareerSkillsColumn is the table column denoting the careerSkills relation/edge.
	CareerSkillsColumn = "skill_id"
)

// Columns holds all SQL columns for skill fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldName,
	FieldKey,
	FieldURL,
	FieldTagKey,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// KeyValidator is a validator for the "key" field. It is called by the builders before save.
	KeyValidator func(string) error
	// URLValidator is a validator for the "url" field. It is called by the builders before save.
	URLValidator func(string) error
	// TagKeyValidator is a validator for the "tag_key" field. It is called by the builders before save.
	TagKeyValidator func(string) error
)
