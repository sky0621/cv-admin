// Code generated by ent, DO NOT EDIT.

package user

import (
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldKey holds the string denoting the key field in the database.
	FieldKey = "key"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldNickname holds the string denoting the nickname field in the database.
	FieldNickname = "nickname"
	// FieldAvatarURL holds the string denoting the avatar_url field in the database.
	FieldAvatarURL = "avatar_url"
	// FieldBirthdayYear holds the string denoting the birthday_year field in the database.
	FieldBirthdayYear = "birthday_year"
	// FieldBirthdayMonth holds the string denoting the birthday_month field in the database.
	FieldBirthdayMonth = "birthday_month"
	// FieldBirthdayDay holds the string denoting the birthday_day field in the database.
	FieldBirthdayDay = "birthday_day"
	// FieldJob holds the string denoting the job field in the database.
	FieldJob = "job"
	// FieldBelongTo holds the string denoting the belong_to field in the database.
	FieldBelongTo = "belong_to"
	// FieldPr holds the string denoting the pr field in the database.
	FieldPr = "pr"
	// Table holds the table name of the user in the database.
	Table = "users"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldKey,
	FieldName,
	FieldNickname,
	FieldAvatarURL,
	FieldBirthdayYear,
	FieldBirthdayMonth,
	FieldBirthdayDay,
	FieldJob,
	FieldBelongTo,
	FieldPr,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// KeyValidator is a validator for the "key" field. It is called by the builders before save.
	KeyValidator func(string) error
)
